- name: confirure of backend
  hosts: backend
  become: yes
  tasks:
    - name: disable default nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enabled nodejs
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.dnf: 
        name: "{{ item }}"
        state: installed
      loop:
      - nodejs
      - mysql
    - name: create expense user
      ansible.builtin.user:
        name: expense

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download backend code 
      ansible.builtin.get_url:
       url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
       dest: /tmp/backend.zip

    - name: unzip backend code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: insatll npm dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy backend service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: install python mysql dependencies
      ansible.builtin.pip: 
        name:
        - PyMySQL 
        - cryptography
        executable: pip3.9
    - name: backend daemon reload
      ansible.builtin.systemd_service:
        state: backend
        daemon_reloaded: true
    - name: start and enabled backend server
      ansible.builtin.service:
        name: backend
        state: started
        enabled: yes    



            





